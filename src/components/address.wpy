<template>
  <view  class="city-picker">
    <!--<view class="city-picker-mask" catchtouchstart="onTouchmask"></view>-->
    <view class="city-picker-content" catchtouchstart="onTouchmask">
      <view class="city-picker-content-line" catchtouchstart="onTouchmask"></view>
      <view class="city-picker-content-center" catchtouchstart="onTouchmask">
        <picker-view class="city-picker-content-item" indicator-style="height: 100rpx;" value="{{tempProvincePos}}" bindchange="province_onChange">
          <picker-view-column>
            <view wx:for="{{provinces}}" wx:key="{{item.province_code}}" style="height: 70rpx; text-align:center; font-size: 36rpx; line-height:70rpx; color:#353535;">{{item.province_name}}</view>
          </picker-view-column>
        </picker-view>
        <picker-view class="city-picker-content-item" indicator-style="height: 70rpx; " value="{{tempCityPos}}" bindchange="city_onChange">
          <picker-view-column>
            <view wx:for="{{provinces[tempProvincePos].city_list}}" wx:key="{{item.city_code}}" style="height: 70rpx; text-align:center;  font-size: 36rpx; line-height:70rpx; color:#353535;">{{item.city_name}}</view>
          </picker-view-column>
        </picker-view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  //  import { service } from '../config.js'
  import http from '../mixins/http'
  import base from '../mixins/base'
  //  import ShareMessage from '../mixins/ShareMessage'
  export default class addresscomponent extends wepy.component {
    mixins = [base, http]
    props = {
      value: {
        type: Array,
        value: [],
        observer: 'onValue'
      },
      isShow: {
        type: Boolean,
        value: false,
        observer: 'onShow'
      }
    }
    data = {
      provinces: [],
      showPicker: false,
      tempProvincePos: [0],
      tempCityPos: [0]
    }

    onLoad() {
      // 获取城市ID
      this.provinces = this.GetAddress()
      this.$apply()
    }

    onShow() {
      this.showPicker = this.isShow
      this.$apply()
    }

    onSureClick(e) {
      var valueCode = [0, 0]
      var valueName = ['', '']
      if (this.provinces != null && this.provinces.length > this.tempProvincePos) {
        if (this.provinces[this.tempProvincePos].city_list != null && this.provinces[this.tempProvincePos].city_list.length > this.tempCityPos) {
          valueCode = [this.provinces[this.tempProvincePos].province_code, this.provinces[this.tempProvincePos].city_list[this.tempCityPos].city_code]
          valueName = [this.provinces[this.tempProvincePos].province_name, this.provinces[this.tempProvincePos].city_list[this.tempCityPos].city_name]
        } else {
          valueCode = [this.provinces[this.tempProvincePos].province_code, 0]
          valueName = [this.provinces[this.tempProvincePos].province_name, '']
        }
      }
      this.$emit('sureclick', {
        valueCode: valueCode,
        valueName: valueName
      })
    }

    methods = {
      onTouchmask(event) {
      },
      onCacnelClick(e) {
        this.$emit('cancelclick', {})
        wx.navigateBack({
          delta: 1
        })
      },
//      onSureClick(e) {
//        var valueCode = [0, 0]
//        var valueName = ['', '']
//        if (this.provinces != null && this.provinces.length > this.tempProvincePos) {
//          if (this.provinces[this.tempProvincePos].city_list != null && this.provinces[this.tempProvincePos].city_list.length > this.tempCityPos) {
//            valueCode = [this.provinces[this.tempProvincePos].province_code, this.provinces[this.tempProvincePos].city_list[this.tempCityPos].city_code]
//            valueName = [this.provinces[this.tempProvincePos].province_name, this.provinces[this.tempProvincePos].city_list[this.tempCityPos].city_name]
//          } else {
//            valueCode = [this.provinces[this.tempProvincePos].province_code, 0]
//            valueName = [this.provinces[this.tempProvincePos].province_name, '']
//          }
//        }
//        this.$emit('sureclick', {
//          valueCode: valueCode,
//          valueName: valueName
//        });
//      },

      province_onChange(e) {
        this.tempProvincePos = e.detail.value
        this.tempCityPos = [0]
        this.onSureClick()
      },
      city_onChange(e) {
        this.tempCityPos = e.detail.value
        this.onSureClick()
      },
      onValue() {
        // 通过传进来的省份城市的code计算对应的index
        var tempProvincePos = 0
        for (var i = 0; i < this.provinces.length; i++) {
          var item = this.provinces[i]
          if (item.province_code == this.value[0]) {
            tempProvincePos = i
            break
          }
        }
        let tempCityPos = 0
        if (this.provinces.length > tempProvincePos) {
          let cityList = this.provinces[tempProvincePos].city_list
          for (let i = 0; i < cityList.length; i++) {
            let item = cityList[i]
            if (item.city_code == this.value[1]) {
              tempCityPos = i
              break
            }
          }
        }
        this.tempProvincePos = [tempProvincePos]
        this.tempCityPos = [tempCityPos]
        this.$apply()
      },
      goto(url) {
        wx.navigateTo({url: url})
      }
    }
  }
</script>

<style type="less">
  .city-picker {
    position: absolute;
    top: 30%;
    left: 0;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    z-index: 9;
  }

  .city-picker-mask {
    /*position: absolute;*/
    /*top: 0;*/
    /*left: 0;*/
    background-color: #353535;
    opacity: 0.3;
    width: 100%;
    height: 100%;
    z-index: 10;
  }

  .city-picker-content {
    /*position: absolute;*/
    /*bottom: 64rpx;*/
    /*left: 0;*/
    width: 654rpx;
    height: 474rpx;
    margin-right: 48rpx;
    margin-left: 48rpx;
    border-radius: 8px;
    background-color: #fff;
    z-index: 33;
    overflow: hidden;
  }

  .hover-class{
    background-color: #e6e6e6;
  }

  .city-picker-content-top {
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 112rpx;
    justify-content: space-between;
  }

  .city-picker-content-line {
    background-color: #d3dce6;
    height: 1px;
    width: 100%;
  }

  .city-picker-content-cancel {
    line-height: 50rpx;
    height: 50rpx;
    font-size: 36rpx;
    color: #353535;
    padding: 30rpx 48rpx;
  }

  .city-picker-content-sure {
    line-height: 50rpx;
    height: 50rpx;
    font-size: 36rpx;
    color: #1AAC19;
    padding: 30rpx 48rpx;
  }

  .city-picker-content-center {
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 400rpx;
    overflow: hidden;
    margin-top: 6rpx;
    margin-bottom: 6rpx;
    justify-content: space-between;
  }

  .city-picker-content-item {
    width: 50%;
    height: 300rpx;
    text-align: center;
  }
</style>
