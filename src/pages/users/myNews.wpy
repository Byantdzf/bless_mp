<template>
  <view style="background:#f5f5f5;height:100%;">
    <scroll-view scroll-top="{{blessingTopHandle}}" scroll-with-animation="true" scroll-anchoring="{{true}}" refresher-enabled="{{true}}" refresher-triggered="{{triggeredsBlessing}}" bindrefresherpulling="onPullingsBlessing" bindrefresherrefresh="onRefreshsBlessing" scroll-y="true" style="-webkit-overflow-scrolling: touch" lower-threshold="0" bindscrolltolower="blessingScroll" bindscroll="blessingToupper">
      <view class="m_abo">
        <view class="blessingBox" wx:for="{{list}}" wx:key="index">
          <view class="blessing_lst">
            <view class="m_lstImg">
              <image class="u_lstImg" src="{{item.pic}}" mode="aspectFill"></image>
              <view class="u_lstHint" wx:if="{{item.status == 1}}"></view>
            </view>
            <view class="m_lstCt">
              <view class="f-fbc">
                <view class="font_32 bold color-333">{{ item.nickname }}</view>
                <view class="font_24 color-999">{{ item.updated_at }}</view>
              </view>
              <view class="font_28 color-666 ellipsis_1 m_lstCon">{{ item.content }}</view>
            </view>
          </view>
        </view>
      </view>
      <view wx:if="{{blessingMessage && showNoData}}" style="padding-bottom: 20rpx;" class="text-center">没有更多数据了</view>
    </scroll-view>
    <view class="m_returnTop {{blessingTatus?'show':'hide'}}">
      <image class="u_returnTop_img" bindtap="blessingToReturnTop" src="https://images.ufutx.com/202106/23/f0d10551dc5d3399cc7f15805cf04f4f.png" mode="scaleToFill" lazy-load="false"></image>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { service } from '../../config.js'
import http from '../../mixins/http'
import base from '../../mixins/base'
import user from '../../mixins/user'
import Loading from '../../components/loading'

export default class myNews extends wepy.page {
  mixins = [base, http, user]
  config = {
    navigationBarTitleText: '祝福箱',
  }
  components = {Loading}
  data = {
    list: [],
    showNoData: true,
    blessingPage: 1,
    blessingMessage: false,
    triggeredsBlessing: false,
    blessingTopHandle: -1,
    blessingTatus: false,
  }

  computed = {}

  onLoad(e) {
    this.getList()
  }

  onShow() {
    this.$parent.getTracker(this.$root.$name, this.config.navigationBarTitleText)
  }

  getList() {
    let vm = this
    if (vm.loading || vm.noMoreList) return
    vm.loading = true
    this.$get({
      url: `${service.host}/official/bottle/list`,
      data: {
        openid: 'oPC_2vgxDzn-G1DREnusMCXDD4Us',
        page: vm.blessingPage
      }
    }, {
      success: ({code, data}) => {
        if (vm.blessingPage > 1 && data.data.length == 0) {
          vm.blessingMessage = true
          return
        } else {
          vm.blessingMessage = false
        }
        if (vm.blessingPage == 1) {
          vm.list = [...vm.list, ...data.data]
          vm.$apply()
          if (vm.list.length == 0) {
            vm.showNoData = false
            vm.$apply()
          } else {
            vm.showNoData = true
            vm.$apply()
          }
        } else {
          data.data.map(function (item, index) {
            vm.list.push(item)
            vm.$apply()
          })
        }
        vm.triggeredsBlessing = false
        vm.$apply()
      },
      fail: ({code, data}) => {
        // 失败了什么也不做
      },
      complete: () => {
        vm.loading = false
      }
    })
  }

  blessingToupper(e) {
    clearTimeout(this._st)
    this._st = setTimeout(() => {
      console.log(e)
      if (e.detail.scrollTop > 380) {
        this.blessingTatus = true
      } else {
        this.blessingTatus = false
      }
      this.$apply()
    }, 200)
  }

  blessingScroll() {
    if (this.blessingMessage) return
    this.blessingPage += 1
    this.getList()
  }

  methods = {
    onPullingsBlessing(e) {
      this.triggeredsBlessing = true
    },
    onRefreshsBlessing(e) {
      this.blessingMessage = false
      this.list = []
      this.blessingPage = 1
      this.getList()
    },
    blessingToReturnTop(e) {
      this.blessingTopHandle = Math.random()
      this.blessingTatus = false
      this.$apply()
    }
  }
  events = {
  }
}

</script>

<style lang="less">
@import "../../styles/weui/base/fn.wxss";
@import "../../styles/custom/fn";
page {
  height: 100%;
  background-color: #f5f5f5 !important;
}
scroll-view {
  height: 100%;
  box-sizing: border-box;
}
.m_abo{
  padding: 30rpx;
  .blessingBox{
    padding: 30rpx;
    background: #ffffff;
    margin-bottom: 24rpx;
    border-radius: 16rpx;
    .blessing_lst{
      display: flex;
      justify-content: left;
      align-items: center;
      .m_lstImg{
        position: relative;
        margin-right: 24rpx;
        .u_lstImg{
          width: 124rpx;
          height: 124rpx;
          border-radius: 50%;
          display: block;
        }
        .u_lstHint{
          position: absolute;
          right: 4rpx;
          top: 4rpx;
          border-radius: 50%;
          width: 24rpx;
          height: 24rpx;
          background: #FF4B41;
          border: 2rpx solid #FFFFFF;
        }
      }
      .m_lstCt{
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        .m_lstCon{
          max-width: 100%;
          margin-top: 12rpx;
        }
      }
    }
  }
}
.m_returnTop {
  position: fixed;
  right: 36rpx;
  bottom: 160rpx;
  -webkit-transition: opacity 1s;
  transition: opacity 1s;
  .u_returnTop_img {
    width: 92rpx;
    height: 92rpx;
    border-radius: 50%;
    box-shadow: 0 0 12rpx 6rpx rgba(0, 0, 0, .06);
  }
}
.m_returnTop.show {
  opacity: 1;
}
.m_returnTop.hide {
  opacity: 0;
}
</style>
